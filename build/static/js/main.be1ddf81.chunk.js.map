{"version":3,"sources":["images/logo.png","images/movil4.jpg","components/Formulario.jsx","components/IngresarCitas.jsx","components/Cita.jsx","components/ListadoCitas.jsx","components/NavBar.jsx","components/TarjetaRecuperados.jsx","components/Footer.jsx","components/SideMenu.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Formulario","crearCita","setCondicionales","useState","mascota","propietario","fecha","hora","sintomas","cita","actualizarCita","error","setError","actualizarState","e","target","name","value","className","action","onSubmit","preventDefault","trim","console","log","id","uuid","type","placeholder","onChange","onClick","isIngresar","isListar","IngresarCitas","guardarCitas","citas","Cita","eliminarCita","ListadoCitas","setRecuperados","recuperados","titulo","length","swal","title","text","icon","buttons","dangerMode","then","nuevasCitas","filter","nuevoRecuperado","nuevosRecuperados","splice","map","key","NavBar","condicionales","clases","isShowMenu","src","logo","alt","TarjetaRecuperados","recuperado","imagen1","Footer","SideMenu","App","citasIniciales","JSON","parse","localStorage","getItem","recuperadosIniciales","useEffect","setItem","stringify","onMouseEnter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.be1ddf81.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d8860a2a.png\";","module.exports = __webpack_public_path__ + \"static/media/movil4.74342da0.jpg\";","import React,{Fragment,useState} from 'react'\r\n\r\nimport uuid from 'uuid/v4'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Formulario = ({crearCita,setCondicionales}) => {\r\n\r\n    \r\n    const [cita, actualizarCita] = useState({\r\n        mascota:'',\r\n        propietario:'',\r\n        fecha:'',\r\n        hora:'',\r\n        sintomas:''\r\n    })\r\n\r\n    const [error, setError] = useState(false)\r\n\r\n    const actualizarState = e =>{\r\n        actualizarCita({...cita,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    const submitCita = e =>{\r\n        e.preventDefault()\r\n        // VALIDAR\r\n        if (mascota.trim() === ''|| propietario.trim() === '' || fecha.trim() === '' || hora.trim() === '' || sintomas.trim() === '' ) {\r\n            console.log('hay un error')\r\n            setError(true)\r\n            return \r\n        }\r\n        setError(false)\r\n        // ASIGNAR\r\n            cita.id = uuid()\r\n        // CREAR CITA\r\n            crearCita(cita)\r\n\r\n        // REINICIAR FORM\r\n        actualizarCita({\r\n            mascota:'',\r\n            propietario:'',\r\n            fecha:'',\r\n            hora:'',\r\n            sintomas:''\r\n        })\r\n    }\r\n    const {mascota,propietario,fecha,hora,sintomas} = cita\r\n\r\n    return ( \r\n        <Fragment>\r\n            {error === true ? \r\n                <p className='alerta-error'>Todos los campos son obligatorios</p>\r\n            :null}\r\n            <form action=\"\"\r\n                  onSubmit={submitCita}\r\n                  className=\"formulario\"\r\n            >\r\n                <div  className='form-field'>\r\n                <label >Nombre Mascota</label>\r\n                <input type='text'\r\n                        name=\"mascota\" \r\n                        className=\"u-full-width\"\r\n                        placeholder=\"Nombre Mascota\"\r\n                        onChange={actualizarState}\r\n                        value={mascota}\r\n                        />\r\n                </div>\r\n                <div className='form-field'>\r\n                <label >Nombre Dueño</label>\r\n                <input type='text'\r\n                        name=\"propietario\" \r\n                        className=\"u-full-width\"\r\n                        placeholder=\"Nombre dueño\"\r\n                        onChange={actualizarState}\r\n                        value={propietario}\r\n                        />\r\n                </div>\r\n                <div className='form-field'>\r\n                <label >Fecha</label>\r\n                <input type='date'\r\n                        name=\"fecha\" \r\n                        className=\"u-full-width\"\r\n                        onChange={actualizarState}\r\n                        value={fecha}\r\n                        \r\n                        />\r\n                </div>\r\n                <div className='form-field'>        \r\n                <label >Hora</label>\r\n                <input type='time'\r\n                        name=\"hora\" \r\n                        className=\"u-full-width\"\r\n                        onChange={actualizarState}\r\n                        value={hora}\r\n                        />\r\n                </div>\r\n                <div className='form-field'>\r\n                <label >Sintomas</label>\r\n                <textarea \r\n                    className='u-full-width' \r\n                    name='sintomas'\r\n                    onChange={actualizarState}\r\n                    value={sintomas}\r\n                    ></textarea>\r\n                </div>    \r\n                <div className='botones-form'>\r\n                <button type='submit' className=\"button button-clasic\">Agregar Cita</button>\r\n                <button type='button' className=\" button  button-clasic\" onClick={()=>{\r\n                    setCondicionales({\r\n                        isIngresar:false,\r\n                        isListar: false\r\n                      })\r\n                }}>Cancelar</button>\r\n                </div>\r\n            </form>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nFormulario.propTypes ={\r\n    crearCita: PropTypes.func.isRequired\r\n}\r\nexport default Formulario;","import React from 'react'\r\nimport Formulario from './Formulario';\r\nimport './style/IngresarCitas.css'\r\nconst IngresarCitas = ({guardarCitas,citas,setCondicionales}) => {\r\n\r\n\r\n  // Función que tome las citas actuales y agregue la nueva\r\n  const crearCita = cita => {\r\n    guardarCitas([ ...citas, cita ]);\r\n  }\r\n  // Mensaje condicional\r\n    return ( \r\n          <div className='ingresarCitas'>\r\n               <h2>Citas</h2> \r\n              <Formulario \r\n                crearCita={crearCita}\r\n                setCondicionales={setCondicionales}\r\n              />\r\n          </div>\r\n        \r\n     );\r\n}\r\n \r\nexport default IngresarCitas;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Cita = ({cita,eliminarCita}) => {\r\n\r\n    const {mascota,propietario,fecha,hora,sintomas} = cita\r\n\r\n    return (  \r\n        <div className='cita'>\r\n            <p>Mascota: <span>{mascota}</span></p>\r\n            <p>Propietario: <span>{propietario}</span></p>\r\n            <p>Fecha: <span>{fecha}</span></p>\r\n            <p>Hora: <span>{hora}</span></p>\r\n            <p>Sintomas: <span>{sintomas}</span></p>\r\n\r\n            <button className='button button-danger'\r\n                onClick={()=> eliminarCita(cita.id)}\r\n            >Eliminar &times;</button>\r\n        </div>\r\n    );\r\n}\r\nCita.propTypes ={\r\n    cita: PropTypes.object.isRequired,\r\n    eliminarCita: PropTypes.func.isRequired\r\n}\r\nexport default Cita;","import React from 'react'\r\nimport Cita from './Cita'\r\nimport swal from 'sweetalert';\r\n\r\nconst ListadoCitas = ({citas,guardarCitas,setCondicionales,setRecuperados,recuperados}) => {\r\n\r\n     // Función que elimina una cita por su id\r\n     const titulo = citas.length === 0?'No hay citas disponibles':'Citas pendientes'\r\n\r\n    const eliminarCita = id => {\r\n\r\n        swal({\r\n            title: \"¿Seguro que quieres eliminarla?\",\r\n            text: \"Esta acción no se pueder revertir\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n          }).then((value) => {\r\n\r\n            if(value === true){ \r\n            const nuevasCitas = citas.filter(cita => cita.id !== id )\r\n            const nuevoRecuperado = citas.filter(cita => cita.id === id )\r\n            if(recuperados.length===4){\r\n              const nuevosRecuperados = [...recuperados]\r\n              nuevosRecuperados.splice(0,1,nuevoRecuperado) \r\n              setRecuperados(nuevosRecuperados)  \r\n            }else{    \r\n            setRecuperados([...recuperados,nuevoRecuperado])\r\n            }\r\n            guardarCitas(nuevasCitas)\r\n        \r\n             if (nuevasCitas.length === 0)        \r\n                setCondicionales({\r\n                isIngresar:false,\r\n                isListar: false\r\n                })\r\n            swal(`Se eliminó correctamente`,'','success')\r\n            }\r\n            \r\n          });\r\n\r\n\r\n        \r\n        \r\n    }\r\n    const handleBotonRegresar =()=>{\r\n        setCondicionales({\r\n            isIngresar:false,\r\n            isListar: false\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <div className='listado-citas'>\r\n        <h2>{titulo}</h2> \r\n        <button className='button button-clasic' onClick={handleBotonRegresar}>Regresar</button>\r\n        <div className='citas'>\r\n        {\r\n        citas.map(cita => (\r\n          <Cita\r\n            key={cita.id}\r\n            cita={cita}\r\n            eliminarCita={eliminarCita}\r\n          />\r\n        ))}\r\n        \r\n        </div>\r\n    </div>\r\n     );\r\n}\r\n \r\nexport default ListadoCitas;","import React from \"react\";\r\nimport \"./style/NavBar.css\";\r\nimport logo from '../images/logo.png'\r\nconst NavBar = ({condicionales,setCondicionales }) => {\r\n\r\n    const handleBurguerButton = ()=>{\r\n        if(condicionales.isShowMenu)\r\n            setCondicionales({\r\n                ...condicionales,\r\n                isShowMenu: false\r\n            })\r\n        else{\r\n            setCondicionales({...condicionales,\r\n                isShowMenu: true\r\n            })  \r\n        }\r\n    }\r\n    const clases = condicionales.isShowMenu ? 'turnBurguer':''\r\n\r\n  return (\r\n    <>\r\n      <div className=\"navbar\">\r\n        <div className=\"brand\">\r\n            <img src={logo} alt=\"\"/>\r\n        </div>\r\n        <div className=\"navbar-title\">\r\n          <h1>Veterinaria <b><span>La vaquita</span></b></h1>\r\n        </div>\r\n        <div className=\"burguer-button\">\r\n          <div>\r\n            <button type=\"button\" onClick={handleBurguerButton} className={clases}> ||| </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react'\r\nimport './style/TarjetaRecuperados.css'\r\nimport imagen1 from '../images/movil4.jpg'\r\nconst TarjetaRecuperados = ({recuperado}) => {\r\n\r\n    const {mascota,fecha,hora,sintomas} = recuperado[0]\r\n    return (  \r\n        <>  \r\n            <div className='tarjeta'>\r\n                <div>\r\n                    <h3>{mascota}</h3>\r\n                </div>\r\n                <div>\r\n                    <img className='img-tarjeta' src={imagen1} alt=\"\"/>\r\n                    <div>\r\n                    <p>Fecha: <span>{fecha}</span></p>\r\n                    <p>Hora: <span>{hora}</span></p>\r\n                    <p>Sintomas: <span>{sintomas}</span></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\n \r\nexport default TarjetaRecuperados;","import React from 'react'\r\nimport './style/Footer.css'\r\n\r\nconst Footer = () => {\r\n    return (  \r\n        <>\r\n            <div className='footer'>\r\n                <p>Isaías Chávez &#169;</p>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n\r\n\r\n}\r\n \r\nexport default Footer;","import React from 'react';\r\nimport './style/SideMenu.css'\r\nconst SideMenu = ({condicionales}) => {\r\n    const {isShowMenu} = condicionales\r\n    console.log(isShowMenu)\r\n    const clases = isShowMenu ?'SideMenu hideSideMenu':'SideMenu'\r\n    return (  \r\n\r\n        <div className={clases} >\r\n            <button type='button'>Ingresar</button>\r\n            <button type=\"button\">Ver lista</button>\r\n        </div>\r\n\r\n    );\r\n}\r\n \r\nexport default SideMenu;","import React, { Fragment, useState, useEffect } from 'react';\r\nimport IngresarCitas from './components/IngresarCitas';\r\nimport ListadoCitas from './components/ListadoCitas';\r\nimport NavBar from './components/NavBar';\r\nimport TarjetaRecuperados from './components/TarjetaRecuperados'\r\nimport Footer from './components/Footer'\r\nimport SideMenu from './components/SideMenu';\r\nfunction App() {\r\n  \r\n  const [condicionales, setCondicionales] = useState({\r\n    isIngresar:false,\r\n    isListar: false,\r\n    isShowMenu: false\r\n  })\r\n  //RECUPERANDO DATOS DEL LOCAL STORAGE\r\n  let citasIniciales = JSON.parse(localStorage.getItem('citas'));\r\n  if(!citasIniciales) {\r\n    citasIniciales = [];\r\n  }\r\n  let recuperadosIniciales = JSON.parse(localStorage.getItem('recuperados'));\r\n\r\n  if(!recuperadosIniciales) {\r\n    recuperadosIniciales = [];\r\n  }\r\n\r\n  // Arreglo de citas\r\n  const [citas, guardarCitas] = useState(citasIniciales);\r\n  \r\n  const [recuperados, setRecuperados] = useState(recuperadosIniciales);\r\n\r\n\r\n\r\n  useEffect( () => {\r\n    let citasIniciales = JSON.parse(localStorage.getItem('citas'));\r\n    let recuperadosIniciales = JSON.parse(localStorage.getItem('recuperados'));\r\n\r\n    if(citasIniciales) {\r\n      localStorage.setItem('citas', JSON.stringify(citas))\r\n    } else {\r\n      localStorage.setItem('citas', JSON.stringify([]));\r\n    }\r\n\r\n    if(recuperadosIniciales) {\r\n      localStorage.setItem('recuperados', JSON.stringify(recuperados))\r\n    } else {\r\n      localStorage.setItem('recuperados', JSON.stringify([]));\r\n    }\r\n\r\n  }, [citas,recuperados] );\r\n  \r\n  const clickIngresarPaciente = () =>{\r\n    setCondicionales({\r\n      isIngresar:true,\r\n      isListar: false\r\n    })\r\n  }\r\n  const clickVerPacientes = ()=>{\r\n    console.log('Clic ver')\r\n    setCondicionales({\r\n      isIngresar:false,\r\n      isListar: true\r\n    })\r\n  }\r\n  const blureo =()=>{\r\n    \r\n  }\r\n  return (\r\n    <Fragment>\r\n       <NavBar\r\n        setCondicionales={setCondicionales}\r\n        condicionales={condicionales}\r\n       />\r\n      <div className='principal'>\r\n     \r\n      <div className='contenido'>\r\n      { (!condicionales.isIngresar && !condicionales.isListar) ? \r\n      <>\r\n      <div className='botones-principales'>\r\n      <button \r\n            className='button button-clasic'\r\n            onClick={clickIngresarPaciente}\r\n            onMouseEnter={blureo}\r\n      >Ingresar Paciente &times;</button>\r\n      <button \r\n            className=' button button-clasic'\r\n            onClick={clickVerPacientes}\r\n      >Ver citas &times;</button>\r\n      </div>\r\n\r\n      </>\r\n      : null }\r\n       <SideMenu\r\n          condicionales={condicionales}\r\n       />\r\n\r\n\r\n\r\n      {condicionales.isIngresar ?\r\n      <IngresarCitas\r\n        citas={citas}\r\n        guardarCitas={guardarCitas}\r\n        setCondicionales={setCondicionales}\r\n      />\r\n      : null}\r\n      {condicionales.isListar ?\r\n      <ListadoCitas\r\n        citas={citas}\r\n        guardarCitas={guardarCitas}\r\n        setCondicionales={setCondicionales}\r\n        setRecuperados={setRecuperados}\r\n        recuperados={recuperados}\r\n      />\r\n      : null}\r\n      \r\n        \r\n      </div>\r\n      { (!condicionales.isIngresar && !condicionales.isListar) ? \r\n      <div className='listado-recuperados'>\r\n        <h2>Ultimos Recuperados</h2>\r\n        {\r\n          recuperados.map(recuperado=>(\r\n            <TarjetaRecuperados\r\n              key={recuperados.id}\r\n              recuperado={recuperado}\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n      : null}\r\n        <Footer/>\r\n     </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}